# The persistence parameter determines whether to use an in-memory database (H2DBEngine) or not (MySQL Server).
# If true, the jdbc-url, username and password MUST be set. Otherwise error.
# If false, there will be a default configuration for the in-memory database. Use it only for testing purposes.
# To override the default configuration of default config, use the parameters defined in
# de.btu.swt.backend.datasource.PropertyNames.
app.datasource.persistent=false

# Configuration of persistent database.
app.datasource.jdbc-url=jdbc:mysql://localhost:3306/authdb?serverTimezone=Europe/Rome
# Username and Password
app.datasource.username=root
app.datasource.password=XXXXXXX

# Default Configuration of the in-memory database. This is already present in the code.
# app.datasource.inmemory.username=sa
# app.datasource.inmemory.password=password
# app.datasource.inmemory.jdbc-url=jdbc:h2:mem:testdb

# See https://docs.spring.io/spring-boot/docs/1.2.0.M1/reference/html/howto-database-initialization.html.
# The initialization policy of Hibernate. Supported are: none, validate, update, create-drop.
spring.jpa.hibernate.ddl-auto=create-drop
# Tells Hibernate if the database schema shall be generated on startup (true) or not (false).
spring.jpa.generate-ddl=true
# Prints the executed SQL commands on the console.
spring.jpa.show-sql=true
# Formats the executed SQL commands for printing them on the console.
spring.jpa.properties.hibernate.format_sql=true
