<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from projectRepository -->
	</parent>
	<groupId>de.btu.swt</groupId>
	<artifactId>backend</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<name>backend</name>
	<description>Spring Backend for Custom-MADE</description>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.9</java.version>
		<project.mainClass>de.btu.swt.backend.DedocBackend</project.mainClass>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-mail</artifactId>
	    	<version>2.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>2.1.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<!-- for zipping folders and files -->
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.6</version>
		</dependency>

		<!--
		Jdbc is a framework for managing db access in an abstract oo manner.
		The MySQL connector is necessary for the usage of a MySQL database.
		The H2 Database Engine is used to give the possibility of using an
		In-Memory database.
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

    <build>
    	<plugins>
    		<plugin>
    			<groupId>org.springframework.boot</groupId>
    			<artifactId>spring-boot-maven-plugin</artifactId>
    		</plugin>
    		<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-compiler-plugin</artifactId>
    			<configuration>
    				<source>${java.version}</source>
    				<target>${java.version}</target>
    			</configuration>
    		</plugin>
    		<plugin>
    			<groupId>org.codehaus.mojo</groupId>
    			<artifactId>exec-maven-plugin</artifactId>
    			<version>1.6.0</version>
    			<executions>
    				<execution>
                        <id>exec</id>
                        <phase>prepare-package</phase>
    					<goals>
    						<goal>java</goal>
    					</goals>
    				</execution>
    			</executions>
    			<configuration>
    				<executable>maven</executable>
    				<mainClass>${project.mainClass}</mainClass>
    			</configuration>
    		</plugin>
    		<plugin>
    			<artifactId>maven-resources-plugin</artifactId>
    			<version>3.1.0</version>
    			<executions>
    				<execution>
    					<id>copy-resource-one</id>
    					<phase>compile</phase>
    					<goals>
    						<goal>copy-resources</goal>
    					</goals>

    					<configuration>
    						<outputDirectory>${basedir}/target/</outputDirectory>
    						<resources>
    							<resource>
    								<directory>.</directory>
    								<includes>
    									<include>langauge-repository.git.cnf</include>
    								</includes>
    							</resource>					
    						</resources>
    					</configuration>
    				</execution>
    			</executions>
    		</plugin>
    		<plugin> 
    			<groupId>org.apache.maven.plugins</groupId> 
    			<artifactId>maven-antrun-plugin</artifactId> 
    			<executions> 
    				<execution> 
    					<id>chmod</id> 
    					<phase>process-classes</phase> 
    					<configuration> 
    						<target> 
	    						<chmod file="target/classes/lsp/manageLSP.sh" perm="755"/>
								<chmod file="target/classes/project/export.sh" perm="755"/>
								<chmod file="target/classes/git_connect/*.sh" perm="755"/>
    						</target> 
    					</configuration> 
    					<goals> 
    						<goal>run</goal> 
    					</goals> 
    				</execution> 
    			</executions> 
    		</plugin> 
    	</plugins>
   </build>



</project>
